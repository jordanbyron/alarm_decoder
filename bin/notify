#!/usr/bin/env ruby

require_relative '../lib/alarm_decoder'
require 'prowl'
require 'mail'

notified = false

Mail.defaults do
  delivery_method :smtp,
    address:              ENV['SMTP_ADDRESS'],
    user_name:            ENV['SMTP_USERNAME'],
    password:             ENV['SMTP_PASSWORD'],
    domain:               ENV['SMTP_DOMAIN'],
    authentication:       ENV['SMTP_AUTHENTICATION'],
    port:                 ENV['SMTP_PORT'],
    openssl_verify_mode:  ENV['SMTP_SSL_VERIFY_MODE']
end

AlarmDecoder.watch do |status|
  if status["alarm_sounding"] || status["fire"]
    type = status["fire"] ? "Fire" : "Alarm"
    zone = status["zone_name"]

    unless notified
      begin
        Prowl.add(
          :apikey => ENV['PROWL_API_KEY'],
          :application => "House Security",
          :event => type,
          :description => zone,
          :priority => 2
        )
      rescue StandardError => e
        puts "Error sending prowl message: #{e.message}"
      end

      begin
        Mail.deliver do
          from     ENV['SMTP_USERNAME']
          to       ENV['NOTIFY_EMAILS'].split(',')
          subject  '146 Union Street - Home Security'
          body     "#{type} in #{zone}"
        end
      rescue StandardError => e
        puts "Error sending email: #{e.message}"
      end
    end
    notified = true
  else
    notified = false
  end
end
